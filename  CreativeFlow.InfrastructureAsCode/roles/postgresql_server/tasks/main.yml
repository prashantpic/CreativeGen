---
- name: Install PostgreSQL packages
  ansible.builtin.apt:
    name:
      - "postgresql-{{ postgresql_version }}"
      - "postgresql-client-{{ postgresql_version }}"
      - "libpq-dev"
      - "python3-psycopg2"
      - "pgbouncer"
    state: present
    update_cache: true

- name: Configure postgresql.conf
  ansible.builtin.template:
    src: postgresql.conf.j2
    dest: "/etc/postgresql/{{ postgresql_version }}/main/postgresql.conf"
    owner: postgres
    group: postgres
    mode: '0644'
  notify: Restart postgresql

- name: Configure pg_hba.conf for client authentication
  ansible.builtin.template:
    src: pg_hba.conf.j2
    dest: "/etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf"
    owner: postgres
    group: postgres
    mode: '0640'
  notify: Restart postgresql

- name: Create application databases
  community.postgresql.postgresql_db:
    name: "{{ item.name }}"
    owner: "{{ item.owner | default(omit) }}"
    encoding: "UTF8"
    lc_collate: "en_US.UTF-8"
    lc_ctype: "en_US.UTF-8"
    template: "template0"
    state: present
  loop: "{{ pg_databases }}"
  become: true
  become_user: postgres
  when: "'db_primary' in group_names"

- name: Create application users
  community.postgresql.postgresql_user:
    db: "{{ item.db | default(omit) }}"
    name: "{{ item.name }}"
    password: "{{ item.password }}" # Passwords must be from vaulted secrets
    priv: "{{ item.priv | default(omit) }}"
    role_attr_flags: "{{ item.role_attr_flags | default('LOGIN') }}"
    state: present
  loop: "{{ pg_users }}"
  become: true
  become_user: postgres
  no_log: true
  when: "'db_primary' in group_names"

- name: Include tasks for primary server configuration
  ansible.builtin.include_tasks: primary.yml
  when: "'db_primary' in group_names"

- name: Include tasks for replica server configuration
  ansible.builtin.include_tasks: replica.yml
  when: "'db_replicas' in group_names"

- name: Configure PgBouncer
  ansible.builtin.template:
    src: pgbouncer.ini.j2
    dest: /etc/pgbouncer/pgbouncer.ini
    owner: postgres
    group: postgres
    mode: '0640'
  notify: Restart pgbouncer

- name: Configure PgBouncer users
  ansible.builtin.template:
    src: userlist.txt.j2
    dest: /etc/pgbouncer/userlist.txt
    owner: postgres
    group: postgres
    mode: '0640'
  notify: Restart pgbouncer
  no_log: true

- name: Ensure PostgreSQL and PgBouncer services are running and enabled
  ansible.builtin.service:
    name: "{{ item }}"
    state: started
    enabled: true
  loop:
    - "postgresql"
    - "pgbouncer"