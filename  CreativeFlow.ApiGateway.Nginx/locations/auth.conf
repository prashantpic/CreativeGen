#
# CreativeFlow API Gateway
# Routing configuration for all public authentication and user-related endpoints.
#
# Description:
# This configuration file defines Nginx `location` blocks to route public,
# unauthenticated traffic related to user sign-up, login, email verification,
# and password recovery to the appropriate backend service.
#
# According to the system design (e.g., Sequence Diagram SD-CF-001), these
# functionalities are primarily handled by the 'odoo_backend' service.
#
# This file also implements rate limiting to protect these sensitive endpoints
# from abuse, such as brute-force login attempts.
#

# --- Stricter Rate Limiting for Login ---
# The login endpoint is a primary target for brute-force attacks.
# We apply a stricter rate limit here.
# The 'login_burst_zone' (limit_req_zone) is assumed to be defined in the main nginx.conf.
# Example definition in nginx.conf:
# limit_req_zone $binary_remote_addr zone=login_burst_zone:10m rate=5r/m;
location = /auth/login {
    # Limit requests to 5 per minute from a single IP. Allows bursts of up to 5 requests.
    limit_req zone=login_burst_zone burst=5 nodelay;

    # Proxy settings
    proxy_pass http://odoo_backend;
    include conf.d/includes/proxy_params.conf;
}

# --- General Rate Limiting for Other Auth Actions ---
# This block handles other authentication-related actions like:
# - /auth/register
# - /auth/verify-email
# - /auth/request-password-reset
# - /auth/reset-password
# A less strict rate limit is applied.
# The 'default_req_zone' is assumed to be defined in the main nginx.conf.
# Example definition in nginx.conf:
# limit_req_zone $binary_remote_addr zone=default_req_zone:10m rate=30r/m;
location /auth/ {
    # Limit requests to 30 per minute from a single IP. Allows bursts of up to 20 requests.
    limit_req zone=default_req_zone burst=20;

    # Proxy settings
    proxy_pass http://odoo_backend;
    include conf.d/includes/proxy_params.conf;
}

# NOTE on User Management Endpoints:
# While some user-related endpoints might be public (e.g., checking if a username is taken),
# the majority of endpoints under a path like `/api/v1/users/` (e.g., fetching a user profile)
# are protected and require authentication.
# For security by default, all `/api/v1/` paths are handled in `api.conf` and are subject
# to authentication checks. If a specific public user endpoint is needed, a more
# specific `location` block should be explicitly defined here.
#
# Example for a hypothetical public endpoint:
# location = /api/v1/users/check-availability {
#     limit_req zone=default_req_zone burst=20;
#     proxy_pass http://odoo_backend;
#     include conf.d/includes/proxy_params.conf;
# }