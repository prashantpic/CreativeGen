#
# CreativeFlow: API Gateway - Developer API Routes
#
# Description: This configuration file manages routing and security for the
# public-facing Developer API. It uses a custom Lua script for API key
# validation and applies specific rate limits based on API key tiers.
#

location /developer/v1/ {
    # --- API Key Validation ---
    # The 'access_by_lua_file' directive executes our custom Lua script.
    # This script will check for an 'X-API-Key' header, validate it against
    # a secure source (e.g., Redis, auth service), and either allow the request
    # or return a 401/403 error.
    access_by_lua_file lua/api_key_validator.lua;

    # --- Rate Limiting Per API Key ---
    # This demonstrates a tiered rate-limiting approach. The 'api_key_validator.lua'
    # script is expected to set a variable like '$api_key_tier' after validating the key.
    # A 'map' directive in a global config file would then map this tier to the
    # appropriate rate limit zone.
    #
    # Example (in nginx.conf http block):
    # map $api_key_tier $limit_zone {
    #   default         per_api_key_tier1; # Lowest tier
    #   "tier2"         per_api_key_tier2;
    #   "enterprise"    per_api_key_enterprise;
    # }
    #
    # Here we use a single zone for simplicity. The zone should use the API key as the key.
    # The 'per_api_key_tier1' zone would be defined in '03-rate_limiting_policies.conf'
    # using a variable set by the lua script, e.g., 'limit_req_zone zone=per_api_key_tier1 key=$http_x_api_key ...'
    limit_req zone=per_api_key_tier1 burst=20 nodelay;

    # If the API key is valid, pass the request to the 'developer_api_service' upstream.
    # The upstream should be defined in '02-upstreams.conf'.
    proxy_pass http://developer_api_service;

    # Include common proxy settings.
    include conf.d/includes/proxy_params.conf;
}