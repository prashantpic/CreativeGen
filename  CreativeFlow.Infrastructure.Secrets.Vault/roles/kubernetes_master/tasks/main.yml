---
- name: Initialize Kubernetes control plane on the first master
  ansible.builtin.command:
    cmd: "kubeadm init --pod-network-cidr=192.168.0.0/16 --apiserver-advertise-address={{ k8s_api_advertise_address }} {% if 'k8s_control_plane_endpoint' in vars %}--control-plane-endpoint={{ k8s_control_plane_endpoint }}{% endif %} {{ kubeadm_init_extra_args }}"
    creates: /etc/kubernetes/admin.conf
  when: inventory_hostname == groups['k8s_masters'][0]
  register: kubeadm_init_result
  changed_when: "'initialized successfully' in kubeadm_init_result.stdout"

- name: Set up kubeconfig for the admin user on the first master
  block:
    - name: Create .kube directory
      ansible.builtin.file:
        path: "/home/{{ ansible_admin_user }}/.kube"
        state: directory
        owner: "{{ ansible_admin_user }}"
        group: "{{ ansible_admin_user }}"
        mode: '0755'

    - name: Copy admin.conf to user's kubeconfig
      ansible.builtin.copy:
        src: /etc/kubernetes/admin.conf
        dest: "/home/{{ ansible_admin_user }}/.kube/config"
        remote_src: yes
        owner: "{{ ansible_admin_user }}"
        group: "{{ ansible_admin_user }}"
        mode: '0600'
  when: inventory_hostname == groups['k8s_masters'][0]

- name: Apply CNI network plugin (Calico)
  ansible.builtin.command:
    cmd: "kubectl apply -f {{ cni_manifest_url }}"
    creates: /etc/cni/net.d/10-calico.conflist
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  when: inventory_hostname == groups['k8s_masters'][0]
  changed_when: true

- name: Generate join command for other masters
  ansible.builtin.command:
    cmd: kubeadm token create --print-join-command
  register: join_command_masters
  when: inventory_hostname == groups['k8s_masters'][0]
  changed_when: false

- name: Store join command for other masters
  ansible.builtin.set_fact:
    join_command_masters: "{{ join_command_masters.stdout }} --control-plane --apiserver-advertise-address={{ k8s_api_advertise_address }}"
  when: inventory_hostname == groups['k8s_masters'][0]

- name: Generate join command for worker nodes
  ansible.builtin.command:
    cmd: kubeadm token create --print-join-command
  register: join_command_workers
  when: inventory_hostname == groups['k8s_masters'][0]
  changed_when: false

- name: Store join command for worker nodes
  ansible.builtin.set_fact:
    join_command_workers: "{{ join_command_workers.stdout }}"
  when: inventory_hostname == groups['k8s_masters'][0]

- name: Join additional masters to the cluster
  ansible.builtin.command:
    cmd: "{{ hostvars[groups['k8s_masters'][0]]['join_command_masters'] }}"
    creates: /etc/kubernetes/kubelet.conf
  when: inventory_hostname != groups['k8s_masters'][0]
  changed_when: true