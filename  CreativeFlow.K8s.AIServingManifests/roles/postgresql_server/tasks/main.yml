---
# tasks file for postgresql_server

- name: Install PostgreSQL server and client packages
  ansible.builtin.apt:
    name:
      - "postgresql-{{ pg_version }}"
      - "postgresql-client-{{ pg_version }}"
      - "python3-psycopg2"
      - "pgbouncer"
    state: present
    update_cache: yes

- name: Deploy main PostgreSQL configuration file
  ansible.builtin.template:
    src: postgresql.conf.j2
    dest: "{{ pg_config_path }}/postgresql.conf"
    owner: postgres
    group: postgres
    mode: '0644'
  notify: Restart postgresql

- name: Deploy client authentication configuration file
  ansible.builtin.template:
    src: pg_hba.conf.j2
    dest: "{{ pg_config_path }}/pg_hba.conf"
    owner: postgres
    group: postgres
    mode: '0640'
  notify: Restart postgresql

- name: Create application databases
  community.postgresql.postgresql_db:
    name: "{{ item.name }}"
    owner: "{{ item.owner | default(pg_default_db_owner) }}"
    state: present
  loop: "{{ pg_databases }}"
  become_user: postgres
  when: "'db_primary' in group_names"

- name: Create application users
  community.postgresql.postgresql_user:
    name: "{{ item.name }}"
    password: "{{ item.password }}" # Passwords MUST come from vault
    role_attr_flags: "{{ item.role_attr_flags | default('LOGIN') }}"
    db: "{{ item.db | default(omit) }}"
    priv: "{{ item.priv | default(omit) }}"
    state: present
  loop: "{{ pg_users }}"
  become_user: postgres
  no_log: true
  when: "'db_primary' in group_names"

# ----- Replication Setup -----
- name: Configure replication on the primary server
  ansible.builtin.include_tasks: primary_replication.yml
  when: "'db_primary' in group_names"

- name: Configure replication on the replica servers
  ansible.builtin.include_tasks: replica_replication.yml
  when: "'db_replicas' in group_names"

# ----- PgBouncer Setup -----
- name: Deploy PgBouncer configuration file
  ansible.builtin.template:
    src: pgbouncer.ini.j2
    dest: /etc/pgbouncer/pgbouncer.ini
    owner: postgres
    group: postgres
    mode: '0640'
  notify: Restart pgbouncer

- name: Deploy PgBouncer user list
  ansible.builtin.template:
    src: userlist.txt.j2
    dest: /etc/pgbouncer/userlist.txt
    owner: postgres
    group: postgres
    mode: '0640'
  notify: Restart pgbouncer

- name: Ensure PostgreSQL service is started and enabled
  ansible.builtin.service:
    name: "{{ pg_service_name }}"
    state: started
    enabled: yes

- name: Ensure PgBouncer service is started and enabled
  ansible.builtin.service:
    name: pgbouncer
    state: started
    enabled: yes