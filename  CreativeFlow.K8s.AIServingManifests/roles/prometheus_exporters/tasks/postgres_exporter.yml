---
# Tasks to install postgres_exporter

- name: Create postgres_exporter user and group
  ansible.builtin.group:
    name: "{{ postgres_exporter_group }}"
    state: present
- ansible.builtin.user:
    name: "{{ postgres_exporter_user }}"
    group: "{{ postgres_exporter_group }}"
    system: yes
    shell: /bin/false

- name: Download and unarchive postgres_exporter
  ansible.builtin.unarchive:
    src: "https://github.com/prometheus-community/postgres_exporter/releases/download/v{{ postgres_exporter_version }}/postgres_exporter-{{ postgres_exporter_version }}.linux-amd64.tar.gz"
    dest: /tmp/
    remote_src: yes
    creates: "/tmp/postgres_exporter-{{ postgres_exporter_version }}.linux-amd64/postgres_exporter"

- name: Copy postgres_exporter binary to /usr/local/bin
  ansible.builtin.copy:
    src: "/tmp/postgres_exporter-{{ postgres_exporter_version }}.linux-amd64/postgres_exporter"
    dest: "/usr/local/bin/postgres_exporter"
    remote_src: yes
    mode: '0755'

- name: Create postgresql user for exporter
  community.postgresql.postgresql_user:
    name: "{{ postgres_exporter_db_user }}"
    password: "{{ vault_postgres_exporter_db_password }}"
  become_user: postgres
  no_log: true
  when: "'db_primary' in group_names"

- name: Grant privileges to exporter user
  community.postgresql.postgresql_privs:
    db: postgres
    privs: SELECT
    objs: pg_stat_database
    roles: "{{ postgres_exporter_db_user }}"
    type: table
  become_user: postgres
  when: "'db_primary' in group_names"

- name: Deploy postgres_exporter environment file
  ansible.builtin.template:
    src: postgres_exporter.env.j2
    dest: /etc/default/postgres_exporter
    mode: '0640'
    owner: "{{ postgres_exporter_user }}"
    group: "{{ postgres_exporter_group }}"
  no_log: true
  notify: Restart postgres_exporter

- name: Deploy systemd service for postgres_exporter
  ansible.builtin.template:
    src: postgres_exporter.service.j2
    dest: /etc/systemd/system/postgres_exporter.service
    mode: '0644'
  notify: Restart postgres_exporter

- name: Enable and start postgres_exporter service
  ansible.builtin.systemd:
    name: postgres_exporter
    state: started
    enabled: yes
    daemon_reload: yes

- name: Allow postgres_exporter port in UFW
  community.general.ufw:
    rule: allow
    port: "{{ postgres_exporter_port }}"
    proto: tcp