[project]
name = "creativeflow-developer-platform-service"
version = "0.1.0"
description = "Microservice for managing developer API access, webhooks, usage, and proxying requests."
authors = [
    { name = "CreativeFlow Engineering", email = "engineering@creativeflow.ai" },
]
readme = "README.md"
requires-python = ">=3.9"
license = { file = "LICENSE" }
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

dependencies = [
    "fastapi==0.111.0",
    "uvicorn[standard]==0.29.0",
    "pydantic[email]==2.7.1",
    "pydantic-settings==2.2.1",
    "sqlalchemy[asyncio]==2.0.30",
    "asyncpg==0.29.0",
    "alembic==1.13.1",
    "passlib[bcrypt]==1.7.4",
    "python-jose[cryptography]==3.3.0",
    "httpx==0.27.0",
    "aio-pika==9.4.1",
    "redis==5.0.4",
    "tenacity==8.3.0",
    "python-json-logger==2.0.7",
]

[project.optional-dependencies]
dev = [
    "pytest==8.2.1",
    "pytest-asyncio==0.23.7",
    "ruff==0.4.4",
    "black==24.4.2",
    "mypy==1.10.0",
    "faker==25.2.0",
]

[tool.black]
line-length = 88
target-version = ['py39']

[tool.ruff]
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
force-single-line = true
lines-after-imports = 2

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
disallow_untyped_defs = true