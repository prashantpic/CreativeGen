[tool.poetry]
name = "creativeflow-aigeneration-orchestrator"
version = "0.1.0"
description = "A service to orchestrate AI-driven creative generation workflows for the CreativeFlow platform."
authors = ["CreativeFlow Engineering <eng@creativeflow.ai>"]
readme = "README.md"
packages = [{include = "creativeflow", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.111.0"
uvicorn = {extras = ["standard"], version = "^0.29.0"}
pydantic-settings = "^2.2.1"
sqlalchemy = {extras = ["asyncpg"], version = "^2.0.29"}
pika = "^1.3.2" # As per spec, though aio-pika is recommended for full async
aio-pika = "^9.4.0" # A more suitable async alternative
httpx = "^0.27.0"
python-json-logger = "^2.0.7"
uuid = "^1.30" # Note: uuid is a standard library, but this could be for a specific implementation if needed. Usually not required here.
psycopg2-binary = "^2.9.9" # Often needed for initial schema setup or sync tools, even with asyncpg.


[tool.poetry.group.dev.dependencies]
pytest = "^8.2.0"
pytest-asyncio = "^0.23.6"
pytest-cov = "^5.0.0"
mypy = "^1.10.0"
ruff = "^0.4.4"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"