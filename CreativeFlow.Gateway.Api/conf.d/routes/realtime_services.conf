# Configuration for handling real-time communication via WebSockets,
# routing traffic to the Notification and Collaboration services.
# Based on SDS Section 3.1.5.

# Routing for WebSocket-based Notification service
location /ws/notifications/ {
    # Step 1: Authenticate the user via JWT before upgrading the connection.
    access_by_lua_file /etc/nginx/lua/auth_jwt.lua;

    # Step 2: Proxy to the notification service backend.
    proxy_pass http://notification_service;

    # Step 3: Set required headers for WebSocket protocol upgrade.
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Keep WebSocket connections open for a long time.
    proxy_read_timeout 86400s; # 24 hours
    proxy_send_timeout 86400s;
}

# Routing for WebSocket-based Collaboration service
location /ws/collaboration/ {
    # Step 1: Authenticate the user via JWT before upgrading the connection.
    access_by_lua_file /etc/nginx/lua/auth_jwt.lua;

    # Step 2: Proxy to the collaboration service backend.
    proxy_pass http://collaboration_service;

    # Step 3: Set required headers for WebSocket protocol upgrade.
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forward-Proto $scheme;

    # Keep WebSocket connections open for a long time.
    proxy_read_timeout 86400s; # 24 hours
    proxy_send_timeout 86400s;
}