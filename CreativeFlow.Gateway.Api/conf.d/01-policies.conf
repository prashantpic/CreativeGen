# Defines reusable policy blocks, such as rate limiting zones and CORS headers.
# This allows for consistent application of cross-cutting policies across different API routes.
# Based on SDS Section 3.1.3.

# --- Rate Limiting Zones ---

# General limit for authenticated users, based on user ID passed from Lua auth script.
# The key is $http_x_user_id, which the Lua script will set after validating the JWT.
limit_req_zone $http_x_user_id zone=user_api_limit:10m rate=20r/s;

# Stricter limit for login attempts by IP to prevent brute-forcing.
# The key is the client's binary IP address, which is memory efficient.
limit_req_zone $binary_remote_addr zone=login_limit:10m rate=10r/m;

# Limit for third-party developers based on their API key.
# The key is $http_x_api_key, which the Lua script will set after validating the key.
limit_req_zone $http_x_api_key zone=developer_api_limit:10m rate=5r/s;


# --- CORS Handling ---

# This map dynamically sets the Access-Control-Allow-Origin header value.
# It only allows origins from creativeflow.ai and its subdomains, plus localhost for development.
map $http_origin $cors_header {
    default "";
    "~https://(.*\.)?creativeflow\.ai" "$http_origin";
    "~http://localhost:.*" "$http_origin"; # For local development
}