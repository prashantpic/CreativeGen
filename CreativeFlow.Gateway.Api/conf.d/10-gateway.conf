# Main virtual server configuration for the API Gateway as per SDS Section 3.1.4.
# It defines the primary server block, listens on ports 80 and 443,
# handles SSL termination, sets up custom error handling, and includes all specific route configurations.

# Redirect all HTTP traffic to HTTPS for security.
server {
    listen 80;
    server_name api.creativeflow.ai;
    return 301 https://$host$request_uri;
}

# Main API Gateway Server listening on HTTPS.
server {
    listen 443 ssl http2;
    server_name api.creativeflow.ai;

    # SSL Configuration (Replace with actual paths from your certificate authority)
    ssl_certificate /etc/letsencrypt/live/api.creativeflow.ai/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.creativeflow.ai/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Logging and Headers
    access_log /var/log/nginx/access.log gateway;
    add_header X-Request-ID $request_id; # For troubleshooting across services

    # Custom Error Handling (as per SDS Section 4)
    # This ensures standardized JSON error responses are sent to the client.
    error_page 401 = @error_json;
    error_page 403 = @error_json;
    error_page 404 = @error_json;
    error_page 429 = @error_json;
    error_page 500 502 503 504 = @error_json;

    location @error_json {
        default_type application/json;
        # $status is the original status code that triggered the error page.
        return $status '{"status": $status, "error": "$status_text", "requestId": "$request_id"}\n';
    }

    # Default handler for any route not explicitly defined.
    # This will trigger the 404 error page configuration above.
    location / {
        return 404;
    }

    # Include all domain-specific route configurations from the 'routes' directory.
    include /etc/nginx/conf.d/routes/*.conf;
}