import uuid
from sqlalchemy import (
    Column, DateTime, String, ForeignKey, Text, Integer, CheckConstraint
)
from sqlalchemy.dialects.postgresql import UUID, JSONB
from sqlalchemy.orm import relationship
from sqlalchemy.sql import func

from ..db.base import Base


class AIModelFeedback(Base):
    """
    Stores user feedback on outputs generated by specific AI models.
    """
    __tablename__ = 'ai_model_feedbacks'

    id = Column(UUID(as_uuid=True), primary_key=True, default=uuid.uuid4)
    userId = Column(UUID(as_uuid=True), ForeignKey('users.id', ondelete='SET NULL'), nullable=False, index=True)
    generationRequestId = Column(UUID(as_uuid=True), ForeignKey('generation_requests.id', ondelete='SET NULL'), nullable=True, index=True)
    modelVersionId = Column(UUID(as_uuid=True), ForeignKey('ai_model_versions.id', ondelete='SET NULL'), nullable=True, index=True)
    rating = Column(Integer, nullable=True)
    comment = Column(Text, nullable=True)
    feedbackTimestamp = Column(DateTime, nullable=False, server_default=func.now())
    details = Column(JSONB, nullable=True)
    createdAt = Column(DateTime, nullable=False, server_default=func.now())

    # Relationships
    user = relationship("User", back_populates="ai_model_feedbacks")
    generation_request = relationship("GenerationRequest", back_populates="feedbacks")
    model_version = relationship("AIModelVersion", back_populates="feedbacks")
    
    __table_args__ = (
        CheckConstraint('rating >= 1 AND rating <= 5', name='ck_ai_model_feedback_rating'),
    )

    def __repr__(self):
        return f"<AIModelFeedback(id={self.id}, userId='{self.userId}', rating={self.rating})>"